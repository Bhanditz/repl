'use strict';

/* eslint-disable */

// Generated by generate_annotations.js
// This file maps native methods to their signatures for completion
// in the repl. if a method isn't listed here, it is either unknown
// to the generator script, or it doesn't take any arguments.

module.exports = new WeakMap([
  [global.eval, [["x"]]],
  [global.parseInt, [["s","?radix"]]],
  [global.parseFloat, [["string"]]],
  [global.isNaN, [["number"]]],
  [global.isFinite, [["number"]]],
  [global.decodeURI, [["encodedURI"]]],
  [global.decodeURIComponent, [["encodedURIComponent"]]],
  [global.encodeURI, [["uri"]]],
  [global.encodeURIComponent, [["uriComponent"]]],
  [global.escape, [["string"]]],
  [global.unescape, [["string"]]],
  [Object.prototype.hasOwnProperty, [["v"]]],
  [Object.prototype.isPrototypeOf, [["v"]]],
  [Object.prototype.propertyIsEnumerable, [["v"]]],
  [Object.getPrototypeOf, [["o"]]],
  [Object.getOwnPropertyDescriptor, [["o","p"]]],
  [Object.getOwnPropertyNames, [["o"]]],
  [Object.create, [["o"],["o","properties"]]],
  [Object.defineProperty, [["o","p","attributes"]]],
  [Object.defineProperties, [["o","properties"]]],
  [Object.seal, [["o"]]],
  [Object.freeze, [["a"],["f"],["o"]]],
  [Object.preventExtensions, [["o"]]],
  [Object.isSealed, [["o"]]],
  [Object.isFrozen, [["o"]]],
  [Object.isExtensible, [["o"]]],
  [Object.keys, [["o"]]],
  [Function.prototype.apply, [["thisArg","?argArray"]]],
  [Function.prototype.call, [["thisArg","...argArray"]]],
  [Function.prototype.bind, [["thisArg","...argArray"]]],
  [String.prototype.charAt, [["pos"]]],
  [String.prototype.charCodeAt, [["index"]]],
  [String.prototype.concat, [["...strings"]]],
  [String.prototype.indexOf, [["searchString","?position"]]],
  [String.prototype.lastIndexOf, [["searchString","?position"]]],
  [String.prototype.localeCompare, [["that"],["that","?locales","?options"]]],
  [String.prototype.match, [["regexp"],["matcher"]]],
  [String.prototype.replace, [["searchValue","replaceValue"],["searchValue","replacer"],["searchValue","replaceValue"],["searchValue","replacer"]]],
  [String.prototype.search, [["regexp"],["searcher"]]],
  [String.prototype.slice, [["?start","?end"]]],
  [String.prototype.split, [["separator","?limit"],["splitter","?limit"]]],
  [String.prototype.substring, [["start","?end"]]],
  [String.prototype.substr, [["from","?length"]]],
  [String.fromCharCode, [["...codes"]]],
  [Number.prototype.toString, [["?radix"]]],
  [Number.prototype.toFixed, [["?fractionDigits"]]],
  [Number.prototype.toExponential, [["?fractionDigits"]]],
  [Number.prototype.toPrecision, [["?precision"]]],
  [Math.abs, [["x"]]],
  [Math.acos, [["x"]]],
  [Math.asin, [["x"]]],
  [Math.atan, [["x"]]],
  [Math.atan2, [["y","x"]]],
  [Math.ceil, [["x"]]],
  [Math.cos, [["x"]]],
  [Math.exp, [["x"]]],
  [Math.floor, [["x"]]],
  [Math.log, [["x"]]],
  [Math.max, [["...values"]]],
  [Math.min, [["...values"]]],
  [Math.pow, [["x","y"]]],
  [Math.round, [["x"]]],
  [Math.sin, [["x"]]],
  [Math.sqrt, [["x"]]],
  [Math.tan, [["x"]]],
  [Date.prototype.toLocaleString, [[],["?locales","?options"]]],
  [Date.prototype.toLocaleDateString, [[],["?locales","?options"]]],
  [Date.prototype.toLocaleTimeString, [[],["?locales","?options"]]],
  [Date.prototype.setTime, [["time"]]],
  [Date.prototype.setMilliseconds, [["ms"]]],
  [Date.prototype.setUTCMilliseconds, [["ms"]]],
  [Date.prototype.setSeconds, [["sec","?ms"]]],
  [Date.prototype.setUTCSeconds, [["sec","?ms"]]],
  [Date.prototype.setMinutes, [["min","?sec","?ms"]]],
  [Date.prototype.setUTCMinutes, [["min","?sec","?ms"]]],
  [Date.prototype.setHours, [["hours","?min","?sec","?ms"]]],
  [Date.prototype.setUTCHours, [["hours","?min","?sec","?ms"]]],
  [Date.prototype.setDate, [["date"]]],
  [Date.prototype.setUTCDate, [["date"]]],
  [Date.prototype.setMonth, [["month","?date"]]],
  [Date.prototype.setUTCMonth, [["month","?date"]]],
  [Date.prototype.setFullYear, [["year","?month","?date"]]],
  [Date.prototype.setUTCFullYear, [["year","?month","?date"]]],
  [Date.prototype.toJSON, [["?key"]]],
  [Date.parse, [["s"]]],
  [Date.UTC, [["year","month","?date","?hours","?minutes","?seconds","?ms"]]],
  [RegExp.prototype.exec, [["string"]]],
  [RegExp.prototype.test, [["string"]]],
  [JSON.parse, [["text","?reviver"]]],
  [JSON.stringify, [["value","?replacer","?space"],["value","?replacer","?space"]]],
  [Array.prototype.push, [["...items"]]],
  [Array.prototype.concat, [["...items"],["...items"]]],
  [Array.prototype.join, [["?separator"]]],
  [Array.prototype.slice, [["?start","?end"]]],
  [Array.prototype.sort, [["?compareFn"]]],
  [Array.prototype.splice, [["start","?deleteCount"],["start","deleteCount","...items"]]],
  [Array.prototype.unshift, [["...items"]]],
  [Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Array.prototype.filter, [["callbackfn","?thisArg"],["callbackfn","?thisArg"]]],
  [Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Array.isArray, [["arg"]]],
  [Promise.prototype.then, [["?onfulfilled","?onrejected"]]],
  [Promise.prototype.catch, [["?onrejected"]]],
  [ArrayBuffer.prototype.slice, [["begin","?end"]]],
  [ArrayBuffer.isView, [["arg"]]],
  [DataView.prototype.getFloat32, [["byteOffset","?littleEndian"]]],
  [DataView.prototype.getFloat64, [["byteOffset","?littleEndian"]]],
  [DataView.prototype.getInt8, [["byteOffset"]]],
  [DataView.prototype.getInt16, [["byteOffset","?littleEndian"]]],
  [DataView.prototype.getInt32, [["byteOffset","?littleEndian"]]],
  [DataView.prototype.getUint8, [["byteOffset"]]],
  [DataView.prototype.getUint16, [["byteOffset","?littleEndian"]]],
  [DataView.prototype.getUint32, [["byteOffset","?littleEndian"]]],
  [DataView.prototype.setFloat32, [["byteOffset","value","?littleEndian"]]],
  [DataView.prototype.setFloat64, [["byteOffset","value","?littleEndian"]]],
  [DataView.prototype.setInt8, [["byteOffset","value"]]],
  [DataView.prototype.setInt16, [["byteOffset","value","?littleEndian"]]],
  [DataView.prototype.setInt32, [["byteOffset","value","?littleEndian"]]],
  [DataView.prototype.setUint8, [["byteOffset","value"]]],
  [DataView.prototype.setUint16, [["byteOffset","value","?littleEndian"]]],
  [DataView.prototype.setUint32, [["byteOffset","value","?littleEndian"]]],
  [Int8Array.prototype.copyWithin, [["target","start","?end"]]],
  [Int8Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Int8Array.prototype.fill, [["value","?start","?end"]]],
  [Int8Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Int8Array.prototype.find, [["predicate","?thisArg"]]],
  [Int8Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Int8Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Int8Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Int8Array.prototype.join, [["?separator"]]],
  [Int8Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Int8Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Int8Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Int8Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Int8Array.prototype.set, [["array","?offset"]]],
  [Int8Array.prototype.slice, [["?start","?end"]]],
  [Int8Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Int8Array.prototype.sort, [["?compareFn"]]],
  [Int8Array.prototype.subarray, [["begin","?end"]]],
  [Int8Array.of, [["...items"]]],
  [Int8Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Uint8Array.prototype.copyWithin, [["target","start","?end"]]],
  [Uint8Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Uint8Array.prototype.fill, [["value","?start","?end"]]],
  [Uint8Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Uint8Array.prototype.find, [["predicate","?thisArg"]]],
  [Uint8Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Uint8Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Uint8Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Uint8Array.prototype.join, [["?separator"]]],
  [Uint8Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Uint8Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Uint8Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint8Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint8Array.prototype.set, [["array","?offset"]]],
  [Uint8Array.prototype.slice, [["?start","?end"]]],
  [Uint8Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Uint8Array.prototype.sort, [["?compareFn"]]],
  [Uint8Array.prototype.subarray, [["begin","?end"]]],
  [Uint8Array.of, [["...items"]]],
  [Uint8Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Uint8ClampedArray.prototype.copyWithin, [["target","start","?end"]]],
  [Uint8ClampedArray.prototype.every, [["callbackfn","?thisArg"]]],
  [Uint8ClampedArray.prototype.fill, [["value","?start","?end"]]],
  [Uint8ClampedArray.prototype.filter, [["callbackfn","?thisArg"]]],
  [Uint8ClampedArray.prototype.find, [["predicate","?thisArg"]]],
  [Uint8ClampedArray.prototype.findIndex, [["predicate","?thisArg"]]],
  [Uint8ClampedArray.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Uint8ClampedArray.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Uint8ClampedArray.prototype.join, [["?separator"]]],
  [Uint8ClampedArray.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Uint8ClampedArray.prototype.map, [["callbackfn","?thisArg"]]],
  [Uint8ClampedArray.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint8ClampedArray.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint8ClampedArray.prototype.set, [["array","?offset"]]],
  [Uint8ClampedArray.prototype.slice, [["?start","?end"]]],
  [Uint8ClampedArray.prototype.some, [["callbackfn","?thisArg"]]],
  [Uint8ClampedArray.prototype.sort, [["?compareFn"]]],
  [Uint8ClampedArray.prototype.subarray, [["begin","?end"]]],
  [Uint8ClampedArray.of, [["...items"]]],
  [Uint8ClampedArray.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Int16Array.prototype.copyWithin, [["target","start","?end"]]],
  [Int16Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Int16Array.prototype.fill, [["value","?start","?end"]]],
  [Int16Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Int16Array.prototype.find, [["predicate","?thisArg"]]],
  [Int16Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Int16Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Int16Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Int16Array.prototype.join, [["?separator"]]],
  [Int16Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Int16Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Int16Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Int16Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Int16Array.prototype.set, [["array","?offset"]]],
  [Int16Array.prototype.slice, [["?start","?end"]]],
  [Int16Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Int16Array.prototype.sort, [["?compareFn"]]],
  [Int16Array.prototype.subarray, [["begin","?end"]]],
  [Int16Array.of, [["...items"]]],
  [Int16Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Uint16Array.prototype.copyWithin, [["target","start","?end"]]],
  [Uint16Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Uint16Array.prototype.fill, [["value","?start","?end"]]],
  [Uint16Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Uint16Array.prototype.find, [["predicate","?thisArg"]]],
  [Uint16Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Uint16Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Uint16Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Uint16Array.prototype.join, [["?separator"]]],
  [Uint16Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Uint16Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Uint16Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint16Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint16Array.prototype.set, [["array","?offset"]]],
  [Uint16Array.prototype.slice, [["?start","?end"]]],
  [Uint16Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Uint16Array.prototype.sort, [["?compareFn"]]],
  [Uint16Array.prototype.subarray, [["begin","?end"]]],
  [Uint16Array.of, [["...items"]]],
  [Uint16Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Int32Array.prototype.copyWithin, [["target","start","?end"]]],
  [Int32Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Int32Array.prototype.fill, [["value","?start","?end"]]],
  [Int32Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Int32Array.prototype.find, [["predicate","?thisArg"]]],
  [Int32Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Int32Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Int32Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Int32Array.prototype.join, [["?separator"]]],
  [Int32Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Int32Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Int32Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Int32Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Int32Array.prototype.set, [["array","?offset"]]],
  [Int32Array.prototype.slice, [["?start","?end"]]],
  [Int32Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Int32Array.prototype.sort, [["?compareFn"]]],
  [Int32Array.prototype.subarray, [["begin","?end"]]],
  [Int32Array.of, [["...items"]]],
  [Int32Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Uint32Array.prototype.copyWithin, [["target","start","?end"]]],
  [Uint32Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Uint32Array.prototype.fill, [["value","?start","?end"]]],
  [Uint32Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Uint32Array.prototype.find, [["predicate","?thisArg"]]],
  [Uint32Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Uint32Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Uint32Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Uint32Array.prototype.join, [["?separator"]]],
  [Uint32Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Uint32Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Uint32Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint32Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Uint32Array.prototype.set, [["array","?offset"]]],
  [Uint32Array.prototype.slice, [["?start","?end"]]],
  [Uint32Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Uint32Array.prototype.sort, [["?compareFn"]]],
  [Uint32Array.prototype.subarray, [["begin","?end"]]],
  [Uint32Array.of, [["...items"]]],
  [Uint32Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Float32Array.prototype.copyWithin, [["target","start","?end"]]],
  [Float32Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Float32Array.prototype.fill, [["value","?start","?end"]]],
  [Float32Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Float32Array.prototype.find, [["predicate","?thisArg"]]],
  [Float32Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Float32Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Float32Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Float32Array.prototype.join, [["?separator"]]],
  [Float32Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Float32Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Float32Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Float32Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Float32Array.prototype.set, [["array","?offset"]]],
  [Float32Array.prototype.slice, [["?start","?end"]]],
  [Float32Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Float32Array.prototype.sort, [["?compareFn"]]],
  [Float32Array.prototype.subarray, [["begin","?end"]]],
  [Float32Array.of, [["...items"]]],
  [Float32Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Float64Array.prototype.copyWithin, [["target","start","?end"]]],
  [Float64Array.prototype.every, [["callbackfn","?thisArg"]]],
  [Float64Array.prototype.fill, [["value","?start","?end"]]],
  [Float64Array.prototype.filter, [["callbackfn","?thisArg"]]],
  [Float64Array.prototype.find, [["predicate","?thisArg"]]],
  [Float64Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Float64Array.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Float64Array.prototype.indexOf, [["searchElement","?fromIndex"]]],
  [Float64Array.prototype.join, [["?separator"]]],
  [Float64Array.prototype.lastIndexOf, [["searchElement","?fromIndex"]]],
  [Float64Array.prototype.map, [["callbackfn","?thisArg"]]],
  [Float64Array.prototype.reduce, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Float64Array.prototype.reduceRight, [["callbackfn"],["callbackfn","initialValue"],["callbackfn","initialValue"]]],
  [Float64Array.prototype.set, [["array","?offset"]]],
  [Float64Array.prototype.slice, [["?start","?end"]]],
  [Float64Array.prototype.some, [["callbackfn","?thisArg"]]],
  [Float64Array.prototype.sort, [["?compareFn"]]],
  [Float64Array.prototype.subarray, [["begin","?end"]]],
  [Float64Array.of, [["...items"]]],
  [Float64Array.from, [["arrayLike","?mapfn","?thisArg"],["arrayLike","?mapfn","?thisArg"]]],
  [Number.prototype.toLocaleString, [["?locales","?options"]]],
  [Array.prototype.find, [["predicate","?thisArg"],["predicate","?thisArg"]]],
  [Array.prototype.findIndex, [["predicate","?thisArg"]]],
  [Array.prototype.fill, [["value","?start","?end"]]],
  [Array.prototype.copyWithin, [["target","start","?end"]]],
  [Array.from, [["arrayLike"],["arrayLike","mapfn","?thisArg"],["iterable"],["iterable","mapfn","?thisArg"]]],
  [Array.of, [["...items"]]],
  [Math.clz32, [["x"]]],
  [Math.imul, [["x","y"]]],
  [Math.sign, [["x"]]],
  [Math.log10, [["x"]]],
  [Math.log2, [["x"]]],
  [Math.log1p, [["x"]]],
  [Math.expm1, [["x"]]],
  [Math.cosh, [["x"]]],
  [Math.sinh, [["x"]]],
  [Math.tanh, [["x"]]],
  [Math.acosh, [["x"]]],
  [Math.asinh, [["x"]]],
  [Math.atanh, [["x"]]],
  [Math.hypot, [["...values"]]],
  [Math.trunc, [["x"]]],
  [Math.fround, [["x"]]],
  [Math.cbrt, [["x"]]],
  [Number.isFinite, [["number"]]],
  [Number.isInteger, [["number"]]],
  [Number.isNaN, [["number"]]],
  [Number.isSafeInteger, [["number"]]],
  [Number.parseFloat, [["string"]]],
  [Number.parseInt, [["string","?radix"]]],
  [Object.assign, [["target","source"],["target","source1","source2"],["target","source1","source2","source3"],["target","...sources"]]],
  [Object.getOwnPropertySymbols, [["o"]]],
  [Object.is, [["value1","value2"]]],
  [Object.setPrototypeOf, [["o","proto"]]],
  [String.prototype.codePointAt, [["pos"]]],
  [String.prototype.includes, [["searchString","?position"]]],
  [String.prototype.endsWith, [["searchString","?endPosition"]]],
  [String.prototype.normalize, [["form"],["?form"]]],
  [String.prototype.repeat, [["count"]]],
  [String.prototype.startsWith, [["searchString","?position"]]],
  [String.prototype.anchor, [["name"]]],
  [String.prototype.fontcolor, [["color"]]],
  [String.prototype.fontsize, [["size"],["size"]]],
  [String.prototype.link, [["url"]]],
  [String.fromCodePoint, [["...codePoints"]]],
  [String.raw, [["template","...substitutions"]]],
  [Map.prototype.delete, [["key"]]],
  [Map.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Map.prototype.get, [["key"]]],
  [Map.prototype.has, [["key"]]],
  [Map.prototype.set, [["key","value"]]],
  [WeakMap.prototype.delete, [["key"]]],
  [WeakMap.prototype.get, [["key"]]],
  [WeakMap.prototype.has, [["key"]]],
  [WeakMap.prototype.set, [["key","value"]]],
  [Set.prototype.add, [["value"]]],
  [Set.prototype.delete, [["value"]]],
  [Set.prototype.forEach, [["callbackfn","?thisArg"]]],
  [Set.prototype.has, [["value"]]],
  [WeakSet.prototype.add, [["value"]]],
  [WeakSet.prototype.delete, [["value"]]],
  [WeakSet.prototype.has, [["value"]]],
  [Promise.all, [["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"]]],
  [Promise.race, [["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"],["values"]]],
  [Promise.reject, [["?reason"]]],
  [Promise.resolve, [["value"],[]]],
  [Proxy.revocable, [["target","handler"]]],
  [Reflect.apply, [["target","thisArgument","argumentsList"]]],
  [Reflect.construct, [["target","argumentsList","?newTarget"]]],
  [Reflect.defineProperty, [["target","propertyKey","attributes"]]],
  [Reflect.deleteProperty, [["target","propertyKey"]]],
  [Reflect.get, [["target","propertyKey","?receiver"]]],
  [Reflect.getOwnPropertyDescriptor, [["target","propertyKey"]]],
  [Reflect.getPrototypeOf, [["target"]]],
  [Reflect.has, [["target","propertyKey"]]],
  [Reflect.isExtensible, [["target"]]],
  [Reflect.ownKeys, [["target"]]],
  [Reflect.preventExtensions, [["target"]]],
  [Reflect.set, [["target","propertyKey","value","?receiver"]]],
  [Reflect.setPrototypeOf, [["target","proto"]]],
  [Symbol.for, [["key"]]],
  [Symbol.keyFor, [["sym"]]],
  [Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Int8Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Uint8Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Uint8ClampedArray.prototype.includes, [["searchElement","?fromIndex"]]],
  [Int16Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Uint16Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Int32Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Uint32Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Float32Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Float64Array.prototype.includes, [["searchElement","?fromIndex"]]],
  [Object.values, [["o"],["o"]]],
  [Object.entries, [["o"],["o"]]],
  [Object.getOwnPropertyDescriptors, [["o"]]],
  [SharedArrayBuffer.prototype.slice, [["begin","?end"]]],
  [Atomics.add, [["typedArray","index","value"]]],
  [Atomics.and, [["typedArray","index","value"]]],
  [Atomics.compareExchange, [["typedArray","index","expectedValue","replacementValue"]]],
  [Atomics.exchange, [["typedArray","index","value"]]],
  [Atomics.isLockFree, [["size"]]],
  [Atomics.load, [["typedArray","index"]]],
  [Atomics.or, [["typedArray","index","value"]]],
  [Atomics.store, [["typedArray","index","value"]]],
  [Atomics.sub, [["typedArray","index","value"]]],
  [Atomics.wait, [["typedArray","index","value","?timeout"]]],
  [Atomics.wake, [["typedArray","index","count"]]],
  [Atomics.xor, [["typedArray","index","value"]]],
  [String.prototype.padStart, [["maxLength","?fillString"]]],
  [String.prototype.padEnd, [["maxLength","?fillString"]]],
  [Promise.prototype.finally, [["?onfinally"]]],
  [Array.prototype.flatMap, [["callback","?thisArg"]]],
  [Array.prototype.flat, [["depth"],["depth"],["depth"],["depth"],["depth"],["depth"],["?depth"],["depth"],["?depth"]]],
  [global.queueMicrotask, [["callback"]]],
]);
